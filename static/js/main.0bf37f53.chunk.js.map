{"version":3,"sources":["components/Header/Header.js","components/Start/Start.js","utilities.js","components/Card/Card.js","components/Characters/Characters.js","components/Turn/Turn.js","httpRequests.js","components/Game/Game.js","components/About/About.js","components/Footer/Footer.js","components/Error/Error.js","components/assets/heisenberg.png","components/App/App.js","index.js"],"names":["withRouter","location","className","pathname","to","Start","startGame","onClick","utilities","getRandomIndex","arr","Math","floor","random","length","getWrongAnswer","answers","wrongAnswer","filter","char","this","Card","character","makeGuess","id","event","Characters","characters","correctAnswer","wrongAnswers","wrongAnswer1","options","randomI","splice","characterCards","map","i","Turn","props","isCorrect","correctAuthor","gameOver","scoreGame","httpRequests","getAllQuotes","fetch","then","res","json","getCharacters","img","Game","componentDidMount","getData","quotes","assignStateFromData","getQuote","catch","handleError","setState","reduce","acc","quote","includes","author","push","state","randomQuote","filteredQuotes","currentQuote","gameOn","target","closest","correctAnswers","guessedCorrect","pastQuotes","hasGuessed","checkForEnd","setTimeout","baseState","switchQuote","scorePercent","toFixed","Component","About","src","alt","href","Footer","Error","App","response","error","heisenburg","path","render","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0bf37f53.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = ({ location }) => {\n\n  return (\n    <header className='header'>\n      <h1 className='logo'>\n        <span className='logo-block'>Qu</span>oting<br></br>\n        <span className='logo-block'>Ba</span>d\n      </h1>\n      {location.pathname !== '/' \n        && <Link className='home-link' to='/'>Home</ Link>}\n    </header>\n  );\n}\n\nexport default withRouter(Header);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Start.css';\n\nconst Start = ({ startGame }) => {\n\n  return (\n    <section  className=\"rules-container\">\n      <h2 className=\"headline\" >RULES</h2>\n      <p>You will be given 10 quotes from Breaking Bad or Better Call Saul and 3 characters.</p>\n      <p>Choose the character that you think authored the quote.</p> \n      <p>Refreshing or leaving the page will start a new game.</p>\n      <h3>Be the one who knocks to start a game.</h3>\n      \n      <button \n        onClick={() => startGame()}\n        className =\"knock-button hover-states\">\n        KNOCK\n      </button>\n    </section>\n  )\n}\n\nexport default Start;\n\nStart.propTypes = {\n  startGame: PropTypes.func.isRequired,\n}\n","const utilities = {\n  getRandomIndex(arr) {\n    return Math.floor(Math.random() * arr.length);\n  },\n  getWrongAnswer(answers, wrongAnswer) {\n    if (wrongAnswer) {\n      answers = answers.filter(char => char !== wrongAnswer);\n    }\n    \n    return answers[this.getRandomIndex(answers)];\n  }\n}\n\nexport default utilities;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Card.css';\n\nconst Card = ({ character, makeGuess  }) => {\n  return (\n    <article \n      className='card hover-states' \n      id={character} \n      onClick={event => makeGuess(event)\n    }>\n      <h4>{character}</h4>\n    </article>\n  );\n}\n\nexport default Card;\n\nCard.propTypes = {\n  character: PropTypes.string.isRequired,\n  makeGuess: PropTypes.func.isRequired,\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport utilities from '../../utilities.js';\nimport Card from '../Card/Card';\nimport './Characters.css';\n\nconst Characters = ({ characters, correctAnswer, makeGuess }) => {\n  const wrongAnswers = characters.filter(char => char !== correctAnswer);\n  \n  const wrongAnswer1 = utilities.getWrongAnswer(wrongAnswers);\n  const wrongAnswer2 = utilities.getWrongAnswer(wrongAnswers, wrongAnswer1);\n  const options = [wrongAnswer1, wrongAnswer2];\n  \n  const randomI = Math.floor(Math.random() * 3);\n  \n  options.splice(randomI, 0, correctAnswer);\n\n  const characterCards = options.map((char, i) => {\n    return <Card makeGuess={makeGuess} key={i} character={char} />;\n  });\n\n  return (\n    <section className='cards-container'>\n        {correctAnswer && characters && characterCards}\n    </section>\n  );\n}\n\nexport default Characters;\n\nCharacters.propTypes = {\n  characters: PropTypes.array.isRequired,\n  correctAnswer: PropTypes.string.isRequired, \n  makeGuess: PropTypes.func.isRequired,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Turn = (props) => {\n  const { isCorrect, correctAuthor, gameOver, scoreGame } = props;\n  return (\n    <section>\n      <h2>{isCorrect && 'Correct!'}</h2>\n      <h2>{!isCorrect && 'S\\'all good man! You\\'ll get em next time.'}</h2>\n      <p>It was {correctAuthor}!</p>\n      {gameOver && \n        <div>\n          <h3>{gameOver && 'Game Over!'}</h3>\n          <p className=\"score\">{gameOver && `You got ${scoreGame()} right`}</p>\n        </div>\n      }\n    </section>\n  );\n}\n\nexport default Turn;\n\nTurn.propTypes = {\n  isCorrect: PropTypes.bool.isRequired,\n  correctAuthor: PropTypes.string.isRequired,\n  gameOver: PropTypes.bool.isRequired,\n}","const httpRequests = {\n  getAllQuotes() {\n    return fetch(\"https://api.breakingbadquotes.xyz/v1/quotes/10\").then((res) =>\n      res.json()\n    );\n  },\n  getCharacters(character) {\n    return fetch(\n      `https://www.breakingbadapi.com/api/characters?name=${character}`\n    )\n      .then((res) => res.json())\n      .then((characters) => {\n        if (characters.length === 0) {\n          return \"error\";\n        } else {\n          return characters[0].img;\n        }\n      });\n  },\n};\n\nexport default httpRequests;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Start from '../Start/Start';\nimport Characters from '../Characters/Characters';\nimport Turn from '../Turn/Turn';\nimport httpRequests from '../../httpRequests.js';\nimport utilities from '../../utilities.js';\nimport './Game.css';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      characters: [],\n      currentQuote: {},\n      pastQuotes: [],\n      correctAnswers: 0,\n      gameOn: false,\n      hasGuessed: false,\n      guessedCorrect: false,\n      gameOver: false,\n    };\n    this.baseState = this.state;\n  }\n\n  componentDidMount = () => {\n    this.getData();\n  }\n\n  getData = () => {\n    httpRequests.getAllQuotes()\n      .then(quotes => this.assignStateFromData(quotes))\n      .then(() => this.getQuote())\n      .catch(() => this.props.handleError('error'));\n  }\n\n  assignStateFromData = (quotes) => {\n    const characters = this.getCharacters(quotes)\n\n    this.setState({ quotes: quotes, characters: characters });\n  }\n\n  getCharacters = (quotes) => {\n    const characters = quotes.reduce((acc, quote) => {\n      if (!acc.includes(quote.author)) {\n        acc.push(quote.author);\n      }\n\n      return acc;\n    }, []);\n\n    return characters;\n  }\n\n  getQuote = () => {\n    const quotes = this.state.quotes;\n    const randomQuote = quotes[utilities.getRandomIndex(quotes)];\n    \n    const filteredQuotes = quotes.filter(quote => quote !== randomQuote);\n\n    this.setState({ \n      quotes: filteredQuotes, \n      currentQuote: randomQuote \n    });\n  }\n\n  startGame = () => {\n    this.setState({ gameOn: true });\n  }\n\n  makeGuess = (event) => {\n    const guess = event.target.closest('article').id;\n    const correctAnswer = this.state.currentQuote.author\n\n    if (guess === correctAnswer) {\n      this.setState({ \n        correctAnswers: (this.state.correctAnswers + 1), guessedCorrect: true \n      });\n    } \n\n    this.setState({ \n      pastQuotes: [...this.state.pastQuotes, \n      this.state.currentQuote], \n      hasGuessed: true \n    });\n    \n    this.checkForEnd();\n  }\n\n  checkForEnd = () => {\n    const amountPastQuotes = this.state.pastQuotes.length + 1;\n    if (amountPastQuotes > 9) {\n      this.setState({ gameOver: true });\n\n      setTimeout(() => {\n        this.setState(this.baseState);\n        this.getData();\n      }, 5000);\n      \n    } else {\n      this.switchQuote();\n    }\n  }\n\n  switchQuote = () => {\n    setTimeout(() => {\n      this.getQuote();\n      this.setState({ \n        hasGuessed: false, \n        guessedCorrect: false \n      });\n    }, 3000);\n  }\n\n  scoreGame = () => {\n    const score = (this.state.correctAnswers / this.state.pastQuotes.length);\n    const scorePercent = (score * 100).toFixed();\n\n    return `${scorePercent}%`;\n  }\n\n  render() {\n    return (\n      <section>\n        {!this.state.gameOn \n          && !this.state.currentQuote && \n          <h2>loading...</h2>}\n\n        {!this.state.gameOn \n          && this.state.currentQuote\n          && <Start startGame={this.startGame}/>}\n\n        {this.state.gameOn \n          && this.state.currentQuote \n          && !this.state.hasGuessed \n          && this.state.characters && \n          <section className='quote-container'>\n            <h2 className='headline'>QUOTE:</h2>\n            <h3 className='quote'>{this.state.currentQuote.quote}</h3>\n            <Characters \n              key={this.state.currentQuote.id}\n              correctAnswer={this.state.currentQuote.author} \n              characters={this.state.characters}\n              makeGuess={this.makeGuess}\n            />\n          </section>\n        }\n\n        {this.state.gameOn \n          && this.state.hasGuessed && \n          <Turn \n            isCorrect={this.state.guessedCorrect}\n            correctAuthor={this.state.currentQuote.author}\n            gameOver={this.state.gameOver}\n            scoreGame={this.scoreGame}\n          />\n        }\n      </section>\n    )\n  }\n}\n\nexport default Game;\n\nGame.propTypes = {\n      handleError: PropTypes.func.isRequired,\n}","import React from 'react';\nimport './About.css';\n\nconst About = () => {\n  return (\n    <section className=\"about\">\n      <h2>Created by</h2>\n      <article className='dev' id='richard'>\n        <h3 className='dev-name'>Richard Tyler</h3>\n        <img className='dev-image' src='https://avatars.githubusercontent.com/u/70095063?s=400&u=39c274f1a2fbb88cc013de61aa8307596a988255&v=4' alt='Richard Tyler' />\n        <a className='dev-gh' href='https://github.com/richardltyler'>Richard's GitHub</a>\n        <a  className='dev-li' href='https://www.linkedin.com/in/richardltyler/'>Richard's LinkedIn</a>\n      </article>\n      <h3 className='context'>Context</h3>\n      <p className='why'>\n        This app was created by Richard Tyler to practice using React and React Router with Asynchronous Javascript. \n      </p>\n      <h3>Technologies</h3>\n      <ul>\n        <li>React.js</li>\n        <li>React-Router</li>\n        <li>FetchAPI</li>\n        <li>Cypress.js</li>\n      </ul>\n    </section>\n  );\n}\n\nexport default About;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Footer.css';\n\nconst Footer = () => {\n  return (\n    <footer className='footer'>\n      <Link to='/about' >About</Link>  \n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport './Error.css';\n\nconst Error = () => {\n  return (\n    <section className='error'>\n      <h2>Real smooth. Slippin' Jimmy went and got an error.</h2>\n      <h3>Try again later or go to About to contact the developers with questions!</h3>\n    </section>\n  )\n}\n\nexport default Error;","export default __webpack_public_path__ + \"static/media/heisenberg.a7b9e7d2.png\";","import { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Header from '../Header/Header';\nimport Game from '../Game/Game';\nimport About from '../About/About';\nimport Footer from '../Footer/Footer';\nimport Error from '../Error/Error';\nimport heisenburg from '../assets/heisenberg.png';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: false,\n    };\n  }\n\n  handleError = (response) => {\n      if (response.includes('error')) {\n        this.setState({ error: true });\n\n      } else {\n        return response;\n      }\n  }\n  \n  render() {\n    return (\n      <div className='App'>\n        <Header />\n        <img \n          className='heisenberg-background' \n          src={heisenburg} \n          \n          alt='heisenburg sketch'>\n        </img>\n        <main className='main'>\n            <Route \n              path='/error'\n              render={() => <Error />}\n            />\n\n            {this.state.error && \n              <Redirect\n                to='/error'\n              /> }\n\n            <Route \n              path='/about'\n              render={() => <About />}\n            />\n\n            <Route\n              exact path='/'\n              render={() => \n                <Game handleError={this.handleError} />}\n            />\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}